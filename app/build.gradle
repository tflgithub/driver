apply plugin: 'com.android.application'
apply plugin: 'com.neenbedankt.android-apt'

def releaseTime() {
    return new Date().format("yyyy-MM-dd", TimeZone.getTimeZone("UTC"))
}

def getAPI_URL(String env) {
    def API_URL
    def Properties props = new Properties()
    def propFile = file('src/main/filters/' + env + '/config.properties')
    if (propFile.canRead()) {
        props.load(new FileInputStream(propFile))
        if (props != null) {
            API_URL = props['API_URL']
        }
    }
    API_URL
}

def getUPGRADE(String env) {
    def UPGRADE
    def Properties props = new Properties()
    def propFile = file('src/main/filters/' + env + '/config.properties')
    if (propFile.canRead()) {
        props.load(new FileInputStream(propFile))
        if (props != null) {
            UPGRADE = props['UPGRADE_URL']
        }
    }
    UPGRADE
}

android {
    signingConfigs {
        config {
            keyAlias 'scanner'
            keyPassword 'xtouch'
            storeFile file('scanner.jks')
            storePassword 'xtouch'
        }
    }
    compileSdkVersion 25
    buildToolsVersion '25.0.2'
    dexOptions {
        //不要对Lib分包
        preDexLibraries = false
        //很重要，不设置这个会有一个诡异的问题：finished with non-zero exit value 3
        javaMaxHeapSize "4g"
    }

    defaultConfig {
        applicationId "fodel.com.fodelscanner"
        minSdkVersion 19
        targetSdkVersion 25
        versionCode 2
        versionName "2.0"
        multiDexEnabled true
        vectorDrawables.useSupportLibrary = true
        if (project.hasProperty('VERSION_CODE_PARA')) {
            versionCode Integer.parseInt(VERSION_CODE_PARA)
        }
        if (project.hasProperty('VERSION_NAME_PARA')) {
            versionName VERSION_NAME_PARA
        }
    }

    productFlavors {
        staging {
            applicationIdSuffix "staging"
        }
        training {
            applicationIdSuffix "training"
        }
        production {
        }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.config
            buildConfigField 'String', 'API_URL', getAPI_URL('debug')
            buildConfigField 'String', 'UPGRADE', getUPGRADE("debug")
            buildConfigField("String", "MENU_COLOR", "\"" + "#13D68F" + "\"")
            manifestPlaceholders = [GOOGLE_API_KEY: "AIzaSyB_5tKaFv6gEY0XV40POz6GfX04Vxm8zJo"]
        }
        release {
            signingConfig signingConfigs.config
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField 'String', 'API_URL', getAPI_URL('release')
            buildConfigField 'String', 'UPGRADE', getUPGRADE("release")
            buildConfigField("String", "MENU_COLOR", "\"" + "#13D68F" + "\"")
            if (project.hasProperty('API_URL_PARA') && project.hasProperty('UPGRADE') && project.hasProperty('MENU_COLOR')) {
                buildConfigField("String", "API_URL", "\"" + API_URL_PARA + "\"")
                buildConfigField("String", "UPGRADE", "\"" + UPGRADE + "\"")
                buildConfigField("String", "MENU_COLOR", "\"" + MENU_COLOR + "\"")
            }
            manifestPlaceholders = [GOOGLE_API_KEY: "AIzaSyB_5tKaFv6gEY0XV40POz6GfX04Vxm8zJo"]
            if (project.hasProperty('GOOGLE_API_KEY_PARA')) {
                manifestPlaceholders = [GOOGLE_API_KEY: GOOGLE_API_KEY_PARA]
            }
        }
        applicationVariants.all { variant ->
            variant.outputs.each { output ->
                def outputFile = output.outputFile
                def fileName
                if (outputFile != null && outputFile.name.endsWith('.apk')) {
                    fileName = "${applicationId}-${defaultConfig.versionCode}-${defaultConfig.versionName}-${releaseTime()}-${variant.buildType.name}.apk"
                    output.outputFile = new File(outputFile.parent, fileName)
                }
                if (project.hasProperty('OUT_PUT_DIR_PARA')) {
                    File output_dir1 = file("${OUT_PUT_DIR_PARA}");
                    output.outputFile = new File(output_dir1, fileName)
                }
            }
        }
    }

    sourceSets.main {
        jniLibs.srcDirs = ['libs']  // <- - Set your folder here!
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile files('libs/xUtils-2.6.14.jar')
    compile project(':alertView')
    compile project(':photoCropper')
    compile files('libs/gson-2.3.1.jar')
    //ZXing

    //响应式编程

    //联网类库
    compile files('libs/locSDK_6.23.jar')
    compile project(path: ':filedownloader')
    //compile 'com.github.kewang:map-controller:v2.1.0'
    compile files('libs/qssdk.jar')
    compile project(':treerecyclerview')
    compile 'com.google.zxing:core:3.3.0'
    compile 'com.github.bumptech.glide:glide:3.7.0'
    compile 'com.android.support:appcompat-v7:25.0.1'
    compile 'com.android.support:design:25.0.1'
    compile 'com.android.support:recyclerview-v7:25.0.1'
    compile 'com.android.support:support-vector-drawable:25.0.1'
    compile 'com.android.support:multidex:1.0.1'
    compile 'com.yefeng:yf_list_recycler_view:1.1.0'
    compile 'io.reactivex:rxandroid:1.1.0'
    compile 'io.reactivex:rxjava:1.1.0'
    compile 'com.squareup.retrofit2:retrofit:2.3.0'
    compile 'com.squareup.retrofit2:adapter-rxjava:2.1.0'
    compile 'com.squareup.retrofit2:converter-scalars:2.1.0'
    compile 'com.dou361.retrofit2:jjdxm-retrofit-converter-fastjson:1.0.0'
    compile 'com.squareup.okhttp3:okhttp:3.9.0'
    compile 'com.squareup.okhttp3:logging-interceptor:3.4.1'
    compile 'com.rmtheis:tess-two:6.2.0'
    compile 'org.greenrobot:eventbus:3.0.0'
    compile 'com.android.support.constraint:constraint-layout:1.0.2'
    compile 'com.google.dagger:dagger:2.0.2'
    compile 'com.google.dagger:dagger-compiler:2.0.2'
    compile 'javax.annotation:javax.annotation-api:1.2'
    compile 'com.j256.ormlite:ormlite-android:4.48'
    compile 'com.android.support:support-v4:25.3.1'
    compile 'com.google.android.gms:play-services-maps:9.6.1'
    compile 'com.google.android.gms:play-services-location:9.6.1'
    compile 'com.google.firebase:firebase-messaging:9.6.1'
    testCompile 'junit:junit:4.12'
}

repositories {
    maven { url "https://jitpack.io" }
    maven { url 'https://maven.google.com' }
}

afterEvaluate {
    tasks.matching {
        it.name.startsWith('dex')
    }.each { dx ->
        if (dx.additionalParameters == null) {
            dx.additionalParameters = ['--multi-dex']
        } else {
            dx.additionalParameters += '--multi-dex'
        }
    }
}
apply plugin: 'com.google.gms.google-services'

